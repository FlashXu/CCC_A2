'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');

var _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);

var _Step = require('./Step');

var _Step2 = _interopRequireDefault(_Step);

var _lib = require('../../lib');

var _PropTypes = require('../../lib/PropTypes');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = {
  name: 'SuiStepGroup',
  components: { SuiStep: _Step2.default },
  mixins: [_lib.SemanticUIVueMixin],
  props: {
    ordered: Boolean,
    steps: Array,
    vertical: Boolean,
    stackable: Boolean,
    unstackable: Boolean,
    fluid: Boolean,
    attached: _PropTypes.Enum.Attached({
      type: Boolean
    }),
    stepNumber: _PropTypes.Enum.Number({
      type: String,
      description: 'Defined number of steps'
    }),
    size: _PropTypes.Enum.Size({
      type: String
    })
  },
  render: function render() {
    var h = arguments[0];

    var ElementType = this.getElementType();
    return h(
      ElementType,
      (0, _babelHelperVueJsxMergeProps2.default)([this.getChildPropsAndListeners(), {
        'class': this.classes('ui', this.stepNumber && this.num(this.stepNumber), this.ordered && 'ordered', this.vertical && 'vertical', this.fluid && 'fluid', this.stackable && 'tablet stackable', this.unstackable && 'unstackable', this.attached, this.attached && 'attached', this.size, 'steps')
      }]),
      [this.steps ? this.steps.map(function (props) {
        return h(
          _Step2.default,
          { props: props },
          []
        );
      }) : this.$slots.default]
    );
  },

  meta: {
    parent: 'SuiStep'
  }
};